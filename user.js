// Generated by CoffeeScript 1.7.1
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  define(['odo/config', 'odo/hub', 'odo/inject', 'redis', 'js-md5'], function(config, hub, inject, redis, md5) {
    var UserApi;
    return UserApi = (function() {
      function UserApi() {
        this.get = __bind(this.get, this);
        this.mutate = __bind(this.mutate, this);
        this.projection = __bind(this.projection, this);
        this.db = __bind(this.db, this);
        inject.bind('odo user by id', this.get);
      }

      UserApi.prototype.db = function() {
        if (this._db != null) {
          return this._db;
        }
        return this._db = redis.createClient(config.redis.port, config.redis.host);
      };

      UserApi.prototype.projection = function() {
        hub.every('start tracking user {id}', (function(_this) {
          return function(m, cb) {
            var user;
            user = {
              id: m.id,
              displayName: m.profile.displayName
            };
            return _this.db().hset("" + config.odo.domain + ":users", m.id, JSON.stringify(user, null, 2), cb);
          };
        })(this));
        hub.every('assign email address {email} to user {id}', this.mutate(function(m, user) {
          user.email = m.email;
          user.emailHash = md5(m.email.trim().toLowerCase());
          return user;
        }));
        hub.every('assign displayName {displayName} to user {id}', this.mutate(function(m, user) {
          user.displayName = m.displayName;
          return user;
        }));
        hub.every('assign username {username} to user {id}', this.mutate(function(m, user) {
          user.username = m.username;
          return user;
        }));
        hub.every('connect twitter to user {id}', this.mutate(function(m, user) {
          user.twitter = {
            id: m.profile.id,
            profile: m.profile
          };
          return user;
        }));
        hub.every('disconnect twitter from user {id}', this.mutate(function(m, user) {
          user.twitter = null;
          return user;
        }));
        hub.every('connect facebook to user {id}', this.mutate(function(m, user) {
          user.facebook = {
            id: m.profile.id,
            profile: m.profile
          };
          return user;
        }));
        hub.every('disconnect facebook from user {id}', this.mutate(function(m, user) {
          user.facebook = null;
          return user;
        }));
        hub.every('connect google to user {id}', this.mutate(function(m, user) {
          user.google = {
            id: m.profile.id,
            profile: m.profile
          };
          return user;
        }));
        hub.every('disconnect google from user {id}', this.mutate(function(m, user) {
          user.google = null;
          return user;
        }));
        hub.every('connect metocean to user {id}', this.mutate(function(m, user) {
          user.metocean = {
            id: m.profile.id,
            profile: m.profile
          };
          return user;
        }));
        hub.every('disconnect metocean from user {id}', this.mutate(function(m, user) {
          user.metocean = null;
          return user;
        }));
        hub.every('create local signin for user {id}', this.mutate(function(m, user) {
          user.local = {
            id: m.id,
            profile: m.profile
          };
          return user;
        }));
        hub.every('set password of user {id}', this.mutate(function(m, user) {
          user.local.profile.password = m.password;
          return user;
        }));
        return hub.every('remove local signin from user {id}', this.mutate(function(m, user) {
          user.local = null;
          return user;
        }));
      };

      UserApi.prototype.mutate = function(mutate) {
        return (function(_this) {
          return function(m, cb) {
            return _this.db().hget("" + config.odo.domain + ":users", m.id, function(err, user) {
              if (err != null) {
                throw err;
              }
              user = mutate(m, JSON.parse(user));
              return _this.db().hset("" + config.odo.domain + ":users", m.id, JSON.stringify(user, null, 2), function() {
                return cb();
              });
            });
          };
        })(this);
      };

      UserApi.prototype.get = function(id, cb) {
        return this.db().hget("" + config.odo.domain + ":users", id, (function(_this) {
          return function(err, data) {
            if (err != null) {
              throw err;
            }
            data = JSON.parse(data);
            return cb(null, data);
          };
        })(this));
      };

      return UserApi;

    })();
  });

}).call(this);
