// Generated by CoffeeScript 1.7.1
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['passport', 'passport-twitter', 'odo/config', 'odo/auth/provider'], function(passport, passporttwitter, config, ProviderAuthentication) {
    var TwitterAuthentication;
    return TwitterAuthentication = (function(_super) {
      __extends(TwitterAuthentication, _super);

      function TwitterAuthentication() {
        this.web = __bind(this.web, this);
        this.provider = 'twitter';
      }

      TwitterAuthentication.prototype.web = function() {
        passport.use(new passporttwitter.Strategy({
          consumerKey: config.passport.twitter['consumer key'],
          consumerSecret: config.passport.twitter['consumer secret'],
          callbackURL: config.passport.twitter['host'] + '/odo/auth/twitter/callback',
          passReqToCallback: true
        }, this.signin));
        return TwitterAuthentication.__super__.web.call(this);
      };

      return TwitterAuthentication;

    })(ProviderAuthentication);
  });

}).call(this);
