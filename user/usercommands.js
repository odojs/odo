// Generated by CoffeeScript 1.7.1
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  define(['odo/messaging/hub', 'odo/messaging/eventstore', 'odo/user/user'], function(hub, es, User) {
    var UserCommands;
    return UserCommands = (function() {
      function UserCommands() {
        this.domain = __bind(this.domain, this);
        this.defaultHandler = __bind(this.defaultHandler, this);
      }

      UserCommands.prototype.commands = ['startTrackingUser', 'assignEmailAddressToUser', 'createVerifyEmailAddressToken', 'assignDisplayNameToUser', 'assignUsernameToUser', 'connectTwitterToUser', 'disconnectTwitterFromUser', 'connectFacebookToUser', 'disconnectFacebookFromUser', 'connectGoogleToUser', 'disconnectGoogleFromUser', 'connectOAuth2ToUser', 'disconnectOAuth2FromUser', 'createLocalSigninForUser', 'assignPasswordToUser', 'createPasswordResetToken', 'removeLocalSigninForUser'];

      UserCommands.prototype.defaultHandler = function(command) {
        var user;
        user = new User(command.payload.id);
        es.extend(user);
        return user.applyHistoryThenCommand(command);
      };

      UserCommands.prototype.domain = function() {
        var command, _i, _len, _ref, _results;
        _ref = this.commands;
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          command = _ref[_i];
          _results.push(hub.handle(command, this.defaultHandler));
        }
        return _results;
      };

      return UserCommands;

    })();
  });

}).call(this);
