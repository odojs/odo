// Generated by CoffeeScript 1.7.1
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  define([], function() {
    var Recorder;
    return Recorder = (function() {
      function Recorder(methods) {
        this.play = __bind(this.play, this);
        this._record = __bind(this._record, this);
        var method, _i, _len;
        this._calls = [];
        for (_i = 0, _len = methods.length; _i < _len; _i++) {
          method = methods[_i];
          this[method] = this._record(method);
        }
      }

      Recorder.prototype._record = function(method) {
        return (function(_this) {
          return function() {
            return _this._calls.push({
              method: method,
              params: arguments
            });
          };
        })(this);
      };

      Recorder.prototype.play = function(target) {
        var call, _i, _len, _ref, _results;
        _ref = this._calls;
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          call = _ref[_i];
          _results.push(target[call.method].apply(target, call.params));
        }
        return _results;
      };

      return Recorder;

    })();
  });

}).call(this);
