// Generated by CoffeeScript 1.7.1
(function() {
  define(['module', 'fs', 'path', 'cson'], function(module, fs, path, CSON) {
    var config, parse, result;
    config = {
      express: {
        'session key': true,
        'cookie secret': true,
        'session secret': true,
        'allowed cross domains': true
      },
      passport: {
        twitter: {
          'consumer key': true,
          'consumer secret': true,
          host: true
        },
        facebook: {
          'app id': true,
          'app secret': true,
          host: true
        },
        google: {
          realm: true,
          host: true
        },
        metocean: {
          'client id': true,
          'client secret': true,
          host: true,
          'authorization url': true,
          'token url': true
        }
      },
      mandrill: {
        'api key': true
      },
      odo: {
        auth: {
          signout: true
        }
      }
    };
    parse = function(prefix, node, result) {
      var envkey, key, value, _results;
      _results = [];
      for (key in node) {
        value = node[key];
        envkey = "" + prefix + (key.toUpperCase().replace(/[ -]/g, '_'));
        if (typeof value === 'object') {
          if (result[key] == null) {
            result[key] = {};
          }
          _results.push(parse("" + envkey + "_", value, result[key]));
        } else if (value === true && (process.env[envkey] != null)) {
          _results.push(result[key] = process.env[envkey]);
        } else {
          _results.push(void 0);
        }
      }
      return _results;
    };
    result = CSON.parseFileSync(path.join(path.dirname(module.uri), '../../config.cson'));
    parse('', config, result);
    parse("" + (result.odo.domain.toUpperCase().replace(/[ -]/g, '_')) + "_", config, result);
    return result;
  });

}).call(this);
